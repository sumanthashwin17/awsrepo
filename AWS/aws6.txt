Elastic BeanStalk
==================
AWS Elastic Beanstalk is an AWS-managed service for web applications.

Elastic Beanstalk is a Platform As A Service (PAAS) as it allows users to directly use a pre-configured server for their application.

First, create an application and select an environment, configure the environment, and deploy the application.



Steps to deploy war file in Tomcat server using Elastic BeanStalk
==================================================================

Step1:
--------
	Create a Dynamic web application i.e DemoApp. 

Deployment Directory Structure
==============================
DemoApp
|
|----Java Resources
|
|----Web Content
	|
	|------index.jsp 
	|
	|------WEB-INF
		|
		|----web.xml 
		|
		|-------lib
			|
			|-----servert-api.jar

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

index.jsp
----------
<center>
	<h1>
		Current Date and Time : <br> 
		<%
			java.util.Date d  = new java.util.Date();
			out.println(d); 
		%>
	</h1>
</center>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

step2:
------
	Convert dynamic web project to war file.

step3:
-----
	Create a role for Identity and Access Management (IAM).
	 	
step4:
------
	Create a a application and deploy the war file using elastic beanstalk.




Amazon S3
============
Amazon S3 (Simple Storage Service) provides object storage, which is built for storing and recovering any amount of information or data from anywhere over the internet. 

In S3 service we need to create a bucket to upload or download a file.

step1:
------
	Create a Spring Boot starter project.

Project structure 
------------------
AWSApp 
|
|--src/main/java
|	|
	|---com.ihub.www
		|
		|--FourthSBApplication.java

	|---com.ihub.www.controller
		|
		|---HomeController.java

|--src/main/resources
|	|
	|---application.yml 

|--src/test/java
|
|--pom.xml 


> Create a spring starter project i.e FourthSB.
ex:
	starters :	
			Spring Web 


> Create a Controller class.
ex:

HomeController.java
-------------------
package com.ihub.www.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class HomeController 
{
	@GetMapping("/msg")
	public String home()
	{
		return "I love AWS classes";
	}
}

> configure server port and application name.

ex:

application.properties
---------------
server.port=  9191

spring.application.name: AWSApp



step2:
------
	Convert to jar file.
	ex:
		right click to project --> run as --> maven build --> package --> finish.


step3:
-----	
	Create a bucket in S3 service.

step4:
-----
	Upload the file in a bucket.












